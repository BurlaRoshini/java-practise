# java-practise
********************************************************************************

**********************************************************************************
#######################################################################################
1.
public class Demo3 {
	static int findEvenOddRes(int n1,int n2,int n3,int n4) {
		int d,index=1,evenSum=0,oddSum=0,res;
		while(n1 != 0 || n2 != 0 || n3 != 0) {
			d = n1 % 10 + n2 % 10 + n3 % 10;
			n1 = n1 / 10;
			n2 = n2 / 10;
			n3 = n3 / 10;
			if(index++ % 2 == 0)
				evenSum = evenSum +d;
			else
				oddSum = oddSum +  d;
		}
		if(n4 % 2 == 0) {
			res = evenSum - oddSum;
		}
		else {
			res = oddSum - evenSum;
		}
		return res;
		}
		public static void main(String[] args) {
			int n1 = 1275,n2 =5676,n3=2312,n4=38;
			int res = findEvenOddRes(n1,n2,n3,n4);
			System.out.println("Final result : "+res);
	}

}

OUTPUT:
Final result : -1

    **************(OR)************************
    
public class Demo4 {
	static int findEvenOddRes(int n1,int n2,int n3,int n4) {
		int d,index=1,sum=0,p=1;
		if(n4 % 2 == 0)
			p=-1;
		while(n1 != 0 || n2 != 0 || n3 != 0) {
			d = n1 % 10 + n2 % 10 + n3 % 10;
			n1  = n1 / 10;
			n2  = n2 / 10;
			n3  = n3 / 10;
			sum = sum + p * d;
			p = p * -1;

		}
		return sum;
	}
	public static void main(String[] args) {
		int n1 = 1275,n2 =5676,n3=2312,n4=38;
		int res = findEvenOddRes(n1,n2,n3,n4);
		System.out.println("Final result : "+res);
	}
}

####################################################################

SUM OF PRIME INDEX VALUES IN AN ARRAY

INDEX-  0  1   2   3   4   5
      { 2  13  25  17  49  61}
            2     3    5
      RES = 25 + 17 +  61 = 103
      
2.public class Demo5 {
	 static boolean isPrimeOrNot(int n) {
		 int count=0;
		 for(int i=1;i <= n;i++) {
				if(n % i == 0)
					count++;
		 }
		 return count == 2 ? true:false;
	 }
	public static void main(String[] args) {
		int[] data = {2,3,-1,4,2,5};
		int sum = 0;
		for(int i=0;i<data.length;i++) {
			if(isPrimeOrNot(i) == true) {
				System.out.println(i);
				sum= sum + data[i];
			}
		}
		System.out.println("Result : "+sum);
	}

}

output:
2
3
5
Result : 8

      
      
      


